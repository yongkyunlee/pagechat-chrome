{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/constants.ts","./src/app/services/auth.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    firebase: {\n        apiKey: \"AIzaSyC6KqtZ1MGPxcHFrVYmqlIANU589g9x2xw\",\n        authDomain: \"chrome-extension-noninertial.firebaseapp.com\",\n        databaseURL: \"https://chrome-extension-noninertial-default-rtdb.firebaseio.com\",\n        projectId: \"chrome-extension-noninertial\",\n        storageBucket: \"chrome-extension-noninertial.appspot.com\",\n        messagingSenderId: \"908579202364\",\n        appId: \"1:908579202364:web:446c01b1e3e347d0562a39\",\n        measurementId: \"G-48RJPR3D4L\"\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class='container'>\n    <div>\n        Page Chat\n    </div>\n    <div>\n        <p>Current URL</p>\n        <p>{{url}}</p>\n        <div>\n            {{ (authService.afAuth.user | async)?.uid}}\n        </div>\n    </div>\n    <div *ngIf=\"authLoaded\">\n        <div *ngIf=\"(authService.afAuth.user | async) === null\">\n            <div>\n                <label>Email</label>\n                <input [(ngModel)]=\"email\" type=\"email\">\n            </div>\n            <div>\n                <label>Passowrd</label>\n                <input [(ngModel)]=\"password\" type=\"password\">\n            </div>\n            <div>\n                <button (click)=\"signInWithEmail()\">\n                    Sign In\n                </button>\n                <button (click)=\"signUpWithEmail()\">\n                    SignUp\n                </button>\n            </div>\n            <div>\n                <button (click)='authService.signInWithGoogle()'>\n                    Sign in with Google\n                </button>\n            </div>\n        </div>\n        \n        <div *ngIf=\"authService.afAuth.user | async\">\n            <div>\n                <p>Friends List</p>\n                <div *ngFor='let friend of friends'>\n                    {{ friend.uid }}\n                </div>\n            </div>\n            <div>\n                <p>Online Friends</p>\n                <div *ngFor='let user of onlineUsers'>\n                    <div *ngIf='user.isFriend'>\n                        {{ user.uid }}\n                    </div>\n                </div>\n            </div>\n    \n            <div>\n                <p>Online Users</p>\n                <div *ngFor='let user of onlineUsers'>\n                    <div *ngIf='!user.isFriend && (authService.afAuth.user | async).uid !== user.uid'>\n                        {{ user.uid  }}\n                    </div>\n                </div>\n            </div>\n\n            <input [(ngModel)]=\"friendUid\" type=\"text\">\n            <button (click)=\"addFriend()\">\n                Add Friend\n            </button>\n            <button (click)='authService.signOut()'\n                    *ngIf='authService.afAuth.user | async'>\n                Sign Out\n            </button>\n        </div>\n    </div>\n</div>\n\n<!-- <router-outlet></router-outlet> -->","import { Component, OnInit, NgZone } from '@angular/core';\n\nimport { AuthService } from './services/auth.service';\nimport { FirebaseService } from './services/firebase.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    public url: string = '';\n    public authLoaded = false;\n    private uid: string;\n    public friendUid = '';\n    public email = '';\n    public password = '';\n    public friends = [];\n    public onlineUsers = [];\n\n    constructor (\n        private zone: NgZone,\n        public authService: AuthService,\n        public firebaseService: FirebaseService\n    ) { }\n\n    ngOnInit() {\n        chrome.tabs.query({active: true, currentWindow: true}, tabs => {\n            this.zone.run(() => {\n                this.url = tabs[0].url;\n            });\n\n            this.authService.afAuth.user.subscribe(data => {\n                this.authLoaded = true;\n                this.uid = data.uid;\n\n                this.firebaseService.getFriends(data.uid).subscribe(data => {\n                    this.friends = data;\n                })\n\n                this.firebaseService.getOnlineUsers(this.uid, this.friends).subscribe(data => {\n                    this.onlineUsers = data;\n                })\n            });\n        }) \n    }\n\n    signInWithEmail() {\n        this.authService.signInViaEmail(this.email, this.password);\n    }\n\n    signUpWithEmail() {\n        this.authService.signUpViaEmail(this.email, this.password);\n    }\n\n    addFriend() {\n        if (this.uid !== null || this.uid !== undefined) {\n            alert(this.friendUid);\n            this.firebaseService.addFriend(this.uid, this.friendUid);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n\nimport firebase from 'firebase/app';\nimport { FRIENDS_COLLECTION, STATUS_COLLECTION } from '../constants';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FirebaseService {\n    constructor(\n        private afs: AngularFirestore\n    ) { }\n\n    addFriend(myUid, friendUid) {\n        this.afs.collection(FRIENDS_COLLECTION).doc(myUid).collection(FRIENDS_COLLECTION)\n                .add({\n                    'uid': friendUid,\n                    'timestamp': firebase.firestore.FieldValue.serverTimestamp()\n                });\n        this.afs.collection(FRIENDS_COLLECTION).doc(friendUid).collection(FRIENDS_COLLECTION)\n                .add({\n                    'uid': myUid,\n                    'timestamp': firebase.firestore.FieldValue.serverTimestamp()\n                });\n    }\n\n    getFriends(uid) {\n        return this.afs.collection(FRIENDS_COLLECTION).doc(uid).collection(FRIENDS_COLLECTION)\n                .snapshotChanges()\n                .pipe(\n                    map(actions => {\n                        return actions.map(a => {\n                            return {\n                                uid: a.payload.doc.data().uid\n                            };\n                        });\n                    })\n                )\n    }\n\n    getOnlineUsers(uid: string, friends: String[]) {\n        return this.afs.collection(STATUS_COLLECTION,\n                ref => ref.where('state', '==', 'online'))\n            .snapshotChanges()\n            .pipe(\n                map(actions => {\n                    return actions.map(a => {\n                        const status: any = a.payload.doc.data();\n                        if (uid !== a.payload.doc.id) {\n                            return {\n                                uid: a.payload.doc.id,\n                                last_changed: status.last_changed,\n                                currentTitle: status.currentTitle,\n                                currentUrl: status.currentUrl,\n                                timestamp: status.timestamp,\n                                isFriend: friends.includes(a.payload.doc.id)\n                            };\n                        }\n                    });\n                })\n            )\n    }\n\n\n\n\n\n\n    // getTabId(name){\n    //     var tabId = name.toLowerCase();\n    //     tabId = tabId.replace(\" \",\"_\");\n    //     return tabId;\n    // }\n\n    // getTab(tabUrl){\n    //     //return this.db.collection('tabs').doc(tabId).snapshotChanges();\n    //     return this.db.collection('tabs', ref => ref.where('url', '==', tabUrl)).snapshotChanges();\n    // }\n\n    // createTab(tab: MyTab){\n    //     return this.db.collection('tabs').add({\n    //     title: tab.title,\n    //     url: tab.url,\n    //     favIconUrl: tab.favIconUrl,\n    //     windowId: tab.windowId,\n    //     tabIndex: tab.tabIndex,\n    //     dateAdded: Date()\n    //     });\n    // }\n\n    // getTabs(){\n    //     return this.db.collection('tabs').snapshotChanges();\n    // }\n\n    // updateTab(tab: MyTab){\n    //     tab.url = tab.url.toLowerCase();\n    //     return this.db.collection('tabs').doc(tab.id).set(tab);\n    // }\n\n    // deleteTab(tab: MyTab){\n    //     return this.db.collection('tabs').doc(tab.id).delete();\n    // }\n\n    // searchTabs(searchValue){\n    //     return this.db.collection('tabs',ref => ref.where('name', '>=', searchValue)\n    //     .where('name', '<=', searchValue + '\\uf8ff'))\n    //     .snapshotChanges()\n    // }\n\n    // searchTabsByName(value){\n    //     return this.db.collection('tabs',ref => ref.orderBy('name').startAt(value)).snapshotChanges();\n    // }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AngularFireModule } from '@angular/fire';\n\n// import { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FirebaseService } from './services/firebase.service';\nimport { AuthService } from './services/auth.service';\nimport { environment } from '../environments/environment';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        AngularFireModule.initializeApp(environment.firebase),\n    ],\n    providers: [ FirebaseService, AuthService ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","export const HISTORY_COLLECTION = 'history';\n\nexport const STATUS_COLLECTION = 'status';\n\nexport const FRIENDS_COLLECTION = 'friends';","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport firebase from 'firebase/app';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    constructor (public afAuth: AngularFireAuth) { }\n\n    signInViaEmail(email, password) {\n        return this.afAuth.signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                alert(err.code);\n            })\n    }\n\n    signUpViaEmail(email, password) {\n        return this.afAuth.createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                alert(err.code);\n            });\n    }\n\n    signInWithGoogle() {\n        return this.afAuth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    }\n\n    signOut() {\n        return this.afAuth.signOut();\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}